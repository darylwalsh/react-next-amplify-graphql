{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/barko187/Workspace/React/react-next-amplify-graphql/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport produce from 'immer';\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"set-current\":\n      {\n        return produce(state, function (draft) {\n          draft.currentTodo = action.payload;\n        });\n      }\n\n    case \"add\":\n      {\n        return produce(state, function (draft) {\n          draft.todos.push(action.payload);\n        });\n      }\n\n    case \"update\":\n      {\n        var todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n        if (todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos[todoIndex] = _objectSpread({}, action.payload);\n        });\n      }\n\n    case \"delete\":\n      {\n        var _todoIndex = state.todos.findIndex(function (todo) {\n          return todo.id === action.payload.id;\n        });\n\n        if (_todoIndex === -1) return state;\n        return produce(state, function (draft) {\n          draft.todos.splice(_todoIndex, 1);\n        });\n      }\n\n    default:\n      {\n        throw new Error(\"Unsupported action \".concat(_JSON$stringify(action)));\n      }\n  }\n};\n\nvar App = function App() {\n  // The reducer defined before\n  var _React$useReducer = React.useReducer(reducer, {\n    currentTodo: '',\n    todos: []\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var add = function add() {\n    dispatch({\n      type: 'add',\n      payload: {\n        id: nanoid(),\n        name: state.currentTodo,\n        completed: false,\n        createdAt: \"\".concat(_Date$now())\n      }\n    });\n    dispatch({\n      type: 'set-current',\n      payload: ''\n    });\n  };\n\n  var edit = function edit(todo\n  /*:Todo*/\n  ) {\n    dispatch({\n      type: 'update',\n      payload: todo\n    });\n  };\n\n  var del = function del(todo\n  /*:Todo*/\n  ) {\n    dispatch({\n      type: 'delete',\n      payload: todo\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"To Do List\")), __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      add(state.currentTodo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state.currentTodo,\n    onChange: function onChange(event) {\n      dispatch({\n        type: 'set-current',\n        payload: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Add\")), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, state.todos.map(function (todo) {\n    return __jsx(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: 'text',\n      value: todo.name,\n      onChange: function onChange(event) {\n        edit(_objectSpread({}, todo, {\n          name: event.target.value\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        del(todo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Delete\"));\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/barko187/Workspace/React/react-next-amplify-graphql/pages/index.tsx"],"names":["React","produce","reducer","state","action","type","draft","currentTodo","payload","todos","push","todoIndex","findIndex","todo","id","splice","Error","App","useReducer","dispatch","add","nanoid","name","completed","createdAt","edit","del","event","preventDefault","target","value","map"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport produce from 'immer'\n\ntype Todo = {\n  id: string;\n  name: string;\n  createdAt: string;\n  completed: boolean;\n};\ntype State = { todos: Todo[]; currentTodo: string };\ntype Action =\n  | { type: \"add\" | \"update\" | \"delete\"; payload: Todo }\n  | { type: \"set-current\"; payload: string };\n\n\nconst reducer: React.Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case \"set-current\": {\n      return produce(state, draft => {\n        draft.currentTodo = action.payload;\n      });\n    }\n    case \"add\": {\n      return produce(state, draft => {\n        draft.todos.push(action.payload);\n      });\n    }\n    case \"update\": {\n      const todoIndex = state.todos.findIndex(\n        todo => todo.id === action.payload.id\n      );\n      if (todoIndex === -1) return state;\n      return produce(state, draft => {\n        draft.todos[todoIndex] = { ...action.payload };\n      });\n    }\n    case \"delete\": {\n      const todoIndex = state.todos.findIndex(\n        todo => todo.id === action.payload.id\n      );\n      if (todoIndex === -1) return state;\n      return produce(state, draft => {\n        draft.todos.splice(todoIndex, 1);\n      });\n    }\n\n    default: {\n      throw new Error(`Unsupported action ${JSON.stringify(action)}`);\n    }\n  }\n};\n\nconst App = () => {\n  // The reducer defined before\n  const [state, dispatch] = React.useReducer(reducer, {\n    currentTodo: '',\n    todos: [],\n  })\n  const add = () => {\n    dispatch({\n      type: 'add',\n      payload: {\n        id: nanoid(),\n        name: state.currentTodo,\n        completed: false,\n        createdAt: `${Date.now()}`,\n      },\n    })\n    dispatch({ type: 'set-current', payload: '' })\n  }\n  const edit = (todo /*:Todo*/) => {\n    dispatch({ type: 'update', payload: todo })\n  }\n  const del = (todo /*:Todo*/) => {\n    dispatch({ type: 'delete', payload: todo })\n  }\n  return (\n    <>\n      <header>\n        <h2>To Do List</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={event => {\n            event.preventDefault()\n            add(state.currentTodo)\n          }}\n        >\n          <input\n            type=\"text\"\n            value={state.currentTodo}\n            onChange={event => {\n              dispatch({ type: 'set-current', payload: event.target.value })\n            }}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        <ul>\n          {state.todos.map(todo => {\n            return (\n              <li key={todo.id}>\n                <input\n                  type={'text'}\n                  value={todo.name}\n                  onChange={event => {\n                    edit({ ...todo, name: event.target.value })\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    del(todo)\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </main>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}